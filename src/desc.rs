use crate::{consts, EtherType};

impl EtherType {
    /// A brief textual description of the [`EtherType`] if it is present in [`consts`].
    pub const fn description(self) -> Option<&'static str> {
        Some(match self {
            consts::IPV4 => "Internet Protocol Version 4 (IPv4)",
            consts::ARP => "Address Resolution Protocol (ARP)",
            consts::FR_ARP => "Frame Relay ARP",
            consts::TRILL => "TRILL",
            consts::L2ISIS => "L2-IS-IS",
            consts::RARP => "Reverse Address Resolution Protocol (RARP)",
            consts::IPV6 => "Internet Protocol Version 6 (IPv6)",
            consts::PPP => "Point-to-Point Protocol (PPP)",
            consts::GSMP => "General Switch Management Protocol (GSMP)",
            consts::MPLS => "MPLS",
            consts::MPLS_MC => "MPLS with upstream-assigned label",
            consts::MCAP => "Multicast Channel Allocation Protocol (MCAP)",
            consts::PPPOE_D => "PPP over Ethernet (PPPoE) Discovery Stage",
            consts::PPPOE_S => "PPP over Ethernet (PPPoE) Session Stage",
            consts::TRILL_FGL => "TRILL Fine Grained Labeling (FGL)",
            consts::TRILL_RBC => "TRILL RBridge Channel",
            consts::C_TAG => "IEEE Std 802.1Q   - Customer VLAN Tag Type (C-Tag, formerly called the Q-Tag) (initially Wellfleet)",
            consts::EPON => "IEEE Std 802.3    - Ethernet Passive Optical Network (EPON)",
            consts::PAE => "IEEE Std 802.1X   - Port-based network access control",
            consts::S_TAG => "IEEE Std 802.1Q   - Service VLAN tag identifier (S-Tag)",
            consts::IEEE802_EXPERIMENTAL1 => "IEEE Std 802      - Local Experimental Ethertype 1",
            consts::IEEE802_EXPERIMENTAL2 => "IEEE Std 802      - Local Experimental Ethertype 2",
            consts::OUI_EXTENDED => "IEEE Std 802      - OUI Extended Ethertype",
            consts::PREAUTH => "IEEE Std 802.11   - Pre-Authentication (802.11i)",
            consts::LLDP => "IEEE Std 802.1AB  - Link Layer Discovery Protocol (LLDP)",
            consts::MACSEC => "IEEE Std 802.1AE  - Media Access Control Security",
            consts::MVRP => "IEEE Std 802.1Q   - Multiple VLAN Registration Protocol (MVRP)",
            consts::MMRP => "IEEE Std 802.1Q   - Multiple Multicast Registration Protocol ",
            consts::FRRR => "IEEE Std 802.11   - Fast Roaming Remote Request (802.11r)",
            consts::MIH => "IEEE Std 802.21   - Media Independent Handover Protocol",
            consts::MIR => "IEEE Std 802.1Qbe - Multiple I-SID Registration Protocol",
            consts::ECP => "IEEE Std 802.1Qbg - ECP Protocol (also used in 802.1BR)",
            consts::SNA => "SNA",
            consts::OSI_NL => "OSI network layer",
            consts::PUP => "PUP",
            consts::XNS => "XNS",
            consts::CHAOS => "Chaos",
            consts::VINES => "VINES",
            consts::VINES_ECHO => "VINES Echo",
            consts::VINES_LOOPBACK => "VINES Loopback",
            consts::DECNET => "DECnet (Phase IV)",
            consts::TEB => "Transparent Ethernet Bridging",
            consts::RAW_FR => "Raw Frame Relay",
            consts::APOLLO_DOMAIN => "Apollo Domain",
            consts::APPLETALK => "Ethertalk (Appletalk)",
            consts::IPX => "Novell IPX",
            consts::RFC1144 => "RFC 1144 TCP/IP compression",
            consts::IP_AUTONOMOUS_SYSTEMS => "IP Autonomous Systems",
            consts::SECURE_DATA => "Secure Data",
            consts::WOL => "Wake-on-LAN",
            consts::CDP => "Cisco Discovery Protocol",
            consts::MSRP => "Stream Reservation Protocol",
            consts::AVTP => "Audio Video Transport Protocol (AVTP)",
            consts::DEC_MOP_RC => "DEC MOP RC",
            consts::LAT => "DEC LAT length and 1 byte padding",
            consts::AARP => "AppleTalk Address Resolution Protocol (AARP)",
            consts::SLPP => "Simple Loop Prevention Protocol (SLPP)",
            consts::VLACP => "Virtual Link Aggregation Control Protocol (VLACP)",
            consts::QNX_QNET => "QNX Qnet",
            consts::SLOW => "Ethernet Slow Protocols such as the Link Aggregation Control Protocol (LACP)",
            consts::COBRANET => "CobraNet",
            consts::HOMEPLUG => "HomePlug 1.0 MME",
            consts::PROFINET => "PROFINET Protocol",
            consts::HYPERSCSI => "HyperSCSI (SCSI over Ethernet)",
            consts::ATAOE => "ATA over Ethernet",
            consts::ETHERCAT => "EtherCAT Protocol",
            consts::POWERLINK => "Ethernet Powerlink",
            consts::GOOSE => "GOOSE (Generic Object Oriented Substation event)",
            consts::GSE => "GSE (Generic Substation Events) Management Services",
            consts::SV => "SV (Sampled Value Transmission)",
            consts::ROMON => "MikroTik RoMON (unofficial)",
            consts::SERCOS => "SERCOS III",
            consts::HOMEPLUG_GREEN => "HomePlug Green PHY",
            consts::MRP => "Media Redundancy Protocol (IEC62439-2)",
            consts::PBB => "Provider Backbone Bridges (PBB) (IEEE 802.1ah)",
            consts::PTP => "Precision Time Protocol (PTP) over IEEE 802.3 Ethernet",
            consts::NCSI => "NC-SI",
            consts::PRP => "Parallel Redundancy Protocol (PRP)",
            consts::CFM => "IEEE 802.1ag Connectivity Fault Management (CFM) Protocol / ITU-T Recommendation Y.1731 (OAM)",
            consts::FCOE => "Fibre Channel over Ethernet (FCoE)",
            consts::FCOE_IP => "FCoE Initialization Protocol",
            consts::ROCE => "RDMA over Converged Ethernet (RoCE)",
            consts::TTE => "TTEthernet Protocol Control Frame (TTE)",
            consts::IEEE1905_1 => "1905.1 IEEE Protocol",
            consts::HSR => "High-availability Seamless Redundancy (HSR)",
            consts::LOOPBACK => "Ethernet Configuration Testing Protocol",
            consts::REDUNDANCY_TAG => "Redundancy Tag (IEEE 802.1CB Frame Replication and Elimination for Reliability)",
            _ => return None,
        })
    }
}
